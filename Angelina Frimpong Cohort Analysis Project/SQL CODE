--CLEANING DATA
SELECT * FROM Online_Retail
WHERE CustomerID IS NULL
--WE HAVE 135,080 RECORDS WHICH HAVE NULL CUSTOMERID

SELECT * FROM Online_Retail
WHERE Quantity<0
--10,624 RECORDS WHICH HAVE NEGATIVE QUANTITY

SELECT * FROM Online_Retail
WHERE InvoiceNo IS NULL
--9291 ROWS WITH NULL INVOICENO

SELECT * FROM Online_Retail
WHERE Description IS NULL
--1454 ROWS WITH NO DESCRIPTION

SELECT * FROM Online_Retail
WHERE Description='?'
--47 ROWS WITH THEIR DESCRIPTION AS '?'

SELECT * FROM Online_Retail
WHERE UnitPrice=0
--2515 ROWS WITH 0 UNIT PRICE

--WE WILL START BY CREATING THE CTE OF OUR TABLE, ONLY INCLUDING THE VALUES WITH CUSTOMERID
WITH CTE_ONLINE_RETAIL AS (
SELECT 
	InvoiceNo, 
	StockCode, 
	Description, 
	Quantity, 
	InvoiceDate, 
	UnitPrice, 
	CustomerID, 
	Country
FROM Online_Retail
WHERE CustomerID IS NOT NULL
),
--WE'LL GO ON WITH THE RECORDS WHICH INCLUDE VALID VALUES(VALUES WITHOUT '-' AND 0
CTE_VALID_QNP AS (										--(VALID QUANTITY AND PRICE)
SELECT * FROM CTE_ONLINE_RETAIL
WHERE Quantity>0 AND UnitPrice>0
),
--DUPLICATE CONTROL (WE FOUND 5215 DUPLICATE ROWS)
CTE_DUPLICATE_CHECK AS (
SELECT *, ROW_NUMBER() OVER (PARTITION BY InvoiceNo,StockCode, Quantity ORDER BY InvoiceDate) AS DUP_FLAG
FROM CTE_VALID_QNP
)
--CLEANED STATE OF OUR DATA
SELECT * 
INTO #CLEAN_RETAIL
FROM CTE_DUPLICATE_CHECK
WHERE DUP_FLAG=1
--WE'LL PASS OUR CLEANED DATA INTO A TEMP TABLE
SELECT * FROM #CLEAN_RETAIL
																		----BEGIN COHORT ANALYSIS----
----FOR COHORT ANALYSIS, WE NEED THESE FIELDS:
--UNIQUE IDENTIFIER (CustomerID)
--INITIAL START DATE (MIN(InvoiceDate))
--REVENUE DATA

--WE WILL PUT THIS DATA INTO A COHORT TEMP TABLE
SELECT 
	CUSTOMERID,
	MIN(INVOICEDATE) AS	FIRST_PURCHASE_DATE,
	DATEFROMPARTS(YEAR(MIN(INVOICEDATE)), MONTH(MIN(INVOICEDATE)),1) COHORT_DATE
INTO #COHORT
FROM #CLEAN_RETAIL
GROUP BY CUSTOMERID

SELECT * FROM #COHORT
--WE'LL GO ON BY CREATING A COHORT INDEX
--A COHORT INDEX IS AN INTEGER REPRESENTATION OF THE NUMBER OF THE MONTHS THAT HAS PASSED SINCE THE CUSTOMERS FIRST ENGAGEMENT
SELECT MMM.*,
	COHORT_INDEX=YEAR_DIFF*12+MONTH_DIFF+1
	INTO #COHORT_RETENTION
FROM
(
	SELECT MM.*,
		YEAR_DIFF=INVOICE_YEAR - COHORT_YEAR,
		MONTH_DIFF=INVOICE_MONTH - COHORT_MONTH
	FROM
(
	SELECT CR.*,
		C.COHORT_DATE,
		YEAR(CR.INVOICEDATE) AS INVOICE_YEAR,
		MONTH(CR.INVOICEDATE) AS INVOICE_MONTH,
		YEAR(C.COHORT_DATE) AS COHORT_YEAR,
		MONTH(C.COHORT_DATE) AS COHORT_MONTH
	FROM #CLEAN_RETAIL CR
	LEFT JOIN #COHORT C ON CR.CUSTOMERID=C.CUSTOMERID
	)MM
)MMM

--1 IN COHORT INDEX MEANS CUSTOMERS FIRST MADE LOTS OF PURCHASE IN THE SAME MONTH
--WE CREATED A TEMP TABLE CALLED #COHORT_RETENTION
SELECT * FROM #COHORT_RETENTION
--GROUP CUSTOMERS BY COHORT INDEX

SELECT 
DISTINCT CUSTOMERID,
COHORT_DATE,
COHORT_INDEX
FROM #COHORT_RETENTION
ORDER BY 1,3

--PIVOTING AND CREATING A COHORT TABLE
SELECT * 
INTO #COHORT_PIVOT
FROM
(
SELECT 
DISTINCT CUSTOMERID,
COHORT_DATE,
COHORT_INDEX
FROM #COHORT_RETENTION
)CTB
PIVOT(
COUNT(CUSTOMERID)
FOR COHORT_INDEX IN
(
[1],
[2],
[3],
[4],
[5],
[6],
[7],
[8],
[9],
[10],
[11],
[12],
[13]
)) AS PIVOTTABLE
ORDER BY 1

--CREATE COHORT RETENTION RATE TO SEE HOW MANY PERCENT OF THE CUSTOMERS RETURNED FOR THE SECOND MONTH
--WE FIRST CREATE A TEMP TABLE CALLED #COHORT_PIVOT
SELECT COHORT_DATE, 
1.0 * [1]/[1]*100 AS [1] ,
1.0 * [2]/[1]*100 AS [2],
1.0 * [3]/[1]*100 AS [3],
1.0 * [4]/[1]*100 AS [4],
1.0 * [5]/[1]*100 AS [5],
1.0 * [6]/[1]*100 AS [6],
1.0 * [7]/[1]*100 AS [7],
1.0 * [8]/[1]*100 AS [8],
1.0 * [9]/[1]*100 AS [9],
1.0 * [10]/[1]*100 AS [10],
1.0 * [11]/[1]*100 AS [11],
1.0 * [12]/[1]*100 AS [12],
1.0 * [13]/[1]*100 AS [13]
FROM #COHORT_PIVOT
ORDER BY 1
